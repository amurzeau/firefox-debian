From: Jeff Muizelaar <jmuizelaar@mozilla.com>
Date: Thu, 25 Feb 2021 13:18:47 +0000
Subject: Bug 1694670. Fix the OOB check in write_u32/u16. r=aosmond

Differential Revision: https://phabricator.services.mozilla.com/D106362
---
 gfx/qcms/src/iccread.rs | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gfx/qcms/src/iccread.rs b/gfx/qcms/src/iccread.rs
index 0113e17..f1107d5 100644
--- a/gfx/qcms/src/iccread.rs
+++ b/gfx/qcms/src/iccread.rs
@@ -229,7 +229,7 @@ fn read_uInt16Number(mem: &mut MemSource, offset: usize) -> uInt16Number {
     read_u16(mem, offset)
 }
 pub fn write_u32(mem: &mut [u8], offset: usize, value: u32) {
-    if offset <= mem.len() - std::mem::size_of_val(&value) {
+    if offset > mem.len() - std::mem::size_of_val(&value) {
         panic!("OOB");
     }
     let mem = mem.as_mut_ptr();
@@ -238,7 +238,7 @@ pub fn write_u32(mem: &mut [u8], offset: usize, value: u32) {
     }
 }
 pub fn write_u16(mem: &mut [u8], offset: usize, value: u16) {
-    if offset <= mem.len() - std::mem::size_of_val(&value) {
+    if offset > mem.len() - std::mem::size_of_val(&value) {
         panic!("OOB");
     }
     let mem = mem.as_mut_ptr();
